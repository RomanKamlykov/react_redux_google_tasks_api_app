{"version":3,"sources":["constants/index.js","api/index.js","actions/sessionActions.js","containers/LogInButton.js","components/LogInButton.js","components/HomeButton.js","actions/taskListsActions.js","components/dialogs/DialogTaskListCreate.js","containers/TaskLists.js","components/TaskLists.js","actions/tasksActions.js","components/dialogs/DialogTaskEdit.js","containers/Task.js","components/Task.js","components/dialogs/DialogTaskCreate.js","components/dialogs/DialogTaskListEditTitle.js","containers/Tasks.js","selectors/index.js","components/Tasks.js","components/Home.js","components/App.js","containers/App.js","reducers/taskListsReducer.js","reducers/tasksReducer.js","reducers/index.js","reducers/sessionReducer.js","store/index.js","index.js"],"names":["keyMirror","SESSION_AUTHORIZE_REQUEST","SESSION_AUTHORIZE_SUCCESS","SESSION_AUTHORIZE_FAIL","SESSION_LOGOUT_SUCCESS","TASK_LISTS_LOAD_REQUEST","TASK_LISTS_LOAD_SUCCESS","TASK_LISTS_LOAD_FAIL","TASK_LIST_CREATE_SUCCESS","TASK_LIST_CREATE_FAIL","TASK_LIST_UPDATE_SUCCESS","TASK_LIST_UPDATE_FAIL","TASK_LIST_DELETE_SUCCESS","TASK_LIST_DELETE_FAIL","TASKS_LOAD_REQUEST","TASKS_LOAD_SUCCESS","TASKS_LOAD_FAIL","TASK_CREATE_SUCCESS","TASK_CREATE_FAIL","TASK_UPDATE_SUCCESS","TASK_UPDATE_FAIL","TASK_DELETE_SUCCESS","TASK_DELETE_FAIL","SCOPES","authorize","params","Promise","resolve","reject","window","gapi","auth","immediate","authResult","error","location","hash","message","console","log","client","load","logout","getToken","accessToken","access_token","fetch","mode","then","signOut","catch","taskListsLoad","request","tasks","tasklists","list","this","makeRequest","taskListCreate","title","insert","taskListUpdate","taskListId","update","tasklist","id","tasksLoad","taskCreate","taskUpdate","taskId","task","taskDelete","delete","taskListDelete","requestObj","execute","resp","result","sessionAuthorize_request","bool","type","constants","items","connect","state","isLoggedIn","sessionReducer","sessionAuthorize","dispatch","api","sessionAuthorize_fail","sessionLogout","ListItem","button","onClick","ListItemIcon","ListItemText","HomeButton","component","href","taskListsLoad_request","DialogTaskListCreate","isOpen","onSubmit","onClose","useState","name","setName","handleClose","Dialog","open","DialogTitle","DialogContent","TextField","autoFocus","label","InputLabelProps","shrink","onChange","e","target","value","DialogActions","Button","color","disabled","taskLists","taskListsReducer","response","taskListsLoad_success","hasFailed","taskListCreate_success","useEffect","isCreatingTaskList","setIsCreatingTaskList","List","ListSubheader","length","map","key","newTaskListName","tasksLoad_request","taskUpdate_success","taskUpdate_fail","DialogTaskEdit","notes","due","newTitle","setNewTitle","newNotes","setNewNotes","newDue","setNewDue","resetState","MuiPickersUtilsProvider","utils","DateFnsUtils","disableToolbar","format","date","undefined","taskUpdateStatus","status","isCompleted","isDialogEditTask","setIsDialogEditTask","openDialogTaskEdit","className","Checkbox","checked","primary","secondary","toDateString","IconButton","confirm","DialogTaskCreate","DialogTaskListEditTitle","initialValue","setValue","ownProps","tasksLists","tasksReducer","match","topicId","taskListTitle","taskListObject","find","elem","selectTaskListTitle","taskListTitleUpdate","taskListTitleUpdate_success","tasksLoad_success","newTask","Date","getTime","getTimezoneOffset","toISOString","taskCreate_success","history","isCreatingTask","setIsCreatingTask","isEditingTaskList","setIsEditingTaskList","replace","Home","rel","TasksRoute","path","Tasks","hashType","Divider","TaskLists","to","formatTaskList","taskList","formatTask","position","appReducer","combineReducers","newState","action","newTaskList","push","updatedTaskListIndex","findIndex","deletedTaskListIndex","splice","unshift","updatedTaskIndex","deletedTaskIndex","middleware","thunk","store","createStore","reducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af3c3d07.chunk.js","sourcesContent":["import keyMirror from 'keymirror';\r\n\r\nexport default keyMirror({\r\n  SESSION_AUTHORIZE_REQUEST    : null,\r\n  SESSION_AUTHORIZE_SUCCESS    : null,\r\n  SESSION_AUTHORIZE_FAIL       : null,\r\n  SESSION_LOGOUT_SUCCESS       : null,\r\n\r\n  // task lists\r\n  TASK_LISTS_LOAD_REQUEST      : null,\r\n  TASK_LISTS_LOAD_SUCCESS      : null,\r\n  TASK_LISTS_LOAD_FAIL         : null,\r\n\r\n  TASK_LIST_CREATE_SUCCESS     : null,\r\n  TASK_LIST_CREATE_FAIL        : null,\r\n\r\n  TASK_LIST_UPDATE_SUCCESS     : null,\r\n  TASK_LIST_UPDATE_FAIL        : null,\r\n\r\n  TASK_LIST_DELETE_SUCCESS     : null,\r\n  TASK_LIST_DELETE_FAIL        : null,\r\n\r\n  // tasks\r\n  TASKS_LOAD_REQUEST           : null,\r\n  TASKS_LOAD_SUCCESS           : null,\r\n  TASKS_LOAD_FAIL              : null,\r\n\r\n  TASK_CREATE_SUCCESS          : null,\r\n  TASK_CREATE_FAIL             : null,\r\n\r\n  TASK_UPDATE_SUCCESS          : null,\r\n  TASK_UPDATE_FAIL             : null,\r\n\r\n  TASK_DELETE_SUCCESS          : null,\r\n  TASK_DELETE_FAIL             : null,\r\n});","const CLIENT_ID = '749877661272-8aur6q21ptv9tf4t13go5sh2l6111a6m.apps.googleusercontent.com'\r\n\r\nconst SCOPES = [\r\n  'https://www.googleapis.com/auth/tasks',\r\n  'https://www.googleapis.com/auth/plus.me'\r\n]\r\n\r\nexport default {\r\n  authorize(params) {\r\n    return new Promise((resolve, reject) => {\r\n      window.gapi.auth.authorize(\r\n        {\r\n          'client_id': CLIENT_ID,\r\n          'scope': SCOPES,\r\n          'immediate': params.immediate,\r\n          'cookie_policy': 'single_host_origin'\r\n        },\r\n        authResult => {\r\n          if (authResult.error) {\r\n            window.location.hash = '/login'\r\n            return reject(authResult.error)\r\n          }\r\n\r\n          if (authResult.message === \"Missing required parameter 'client_id'\") {\r\n            return reject(authResult.message)\r\n          }\r\n\r\n          console.log('successfully logged in!')\r\n          return window.gapi.client.load('tasks', 'v1', () => window.gapi.client.load('plus', 'v1', () => resolve()))\r\n        }\r\n      )\r\n    })\r\n  },\r\n\r\n  logout() {\r\n    return new Promise((resolve, reject) => {\r\n      const token = window.gapi.auth.getToken()\r\n\r\n      if (token) {\r\n        const accessToken = window.gapi.auth.getToken().access_token\r\n\r\n        fetch(`https://accounts.google.com/o/oauth2/revoke?token=${accessToken}`, {\r\n          mode: 'no-cors'\r\n        })\r\n          .then(() => {\r\n            window.gapi.auth.signOut()\r\n            resolve()\r\n          })\r\n          .catch((error) => reject(error))\r\n      }\r\n    })\r\n  },\r\n\r\n  taskListsLoad() {\r\n    const request = window.gapi.client.tasks.tasklists.list()\r\n    return this.makeRequest(request)\r\n  },\r\n\r\n  taskListCreate({ title }) {\r\n    const request = window.gapi.client.tasks.tasklists.insert({\r\n      title\r\n    })\r\n    return this.makeRequest(request)\r\n  },\r\n\r\n  taskListUpdate({ taskListId, title }) {\r\n    const request = window.gapi.client.tasks.tasklists.update({\r\n      tasklist: taskListId,\r\n      id: taskListId,\r\n      title\r\n    });\r\n\r\n    return this.makeRequest(request);\r\n  },\r\n\r\n  tasksLoad({ taskListId }) {\r\n    const request = window.gapi.client.tasks.tasks.list({\r\n      tasklist: taskListId\r\n    })\r\n    return this.makeRequest(request)\r\n  },\r\n\r\n  taskCreate({ taskListId, ...params }) {\r\n    const request = window.gapi.client.tasks.tasks.insert({\r\n      tasklist: taskListId,\r\n      ...params\r\n    })\r\n    return this.makeRequest(request)\r\n  },\r\n\r\n  taskUpdate({ taskListId, taskId, ...params }) {\r\n    const request = window.gapi.client.tasks.tasks.update({\r\n      tasklist: taskListId,\r\n      task: taskId,\r\n      id: taskId,\r\n      ...params\r\n    })\r\n    return this.makeRequest(request)\r\n  },\r\n\r\n  taskDelete({ taskListId, taskId }) {\r\n    const request = window.gapi.client.tasks.tasks.delete({\r\n      tasklist: taskListId,\r\n      task: taskId,\r\n      id: taskId\r\n    })\r\n    return this.makeRequest(request)\r\n  },\r\n\r\n  taskListDelete({ taskListId }) {\r\n    const request = window.gapi.client.tasks.tasklists.delete({\r\n      tasklist: taskListId\r\n    })\r\n    return this.makeRequest(request)\r\n  },\r\n\r\n  makeRequest(requestObj) {\r\n    return new Promise((resolve, reject) => {\r\n      requestObj.execute(resp =>\r\n        resp.error\r\n          ? reject(resp.error)\r\n          : resolve(resp.result)\r\n      )\r\n    })\r\n  }\r\n}\r\n","import constants from '../constants'\r\nimport api from '../api'\r\n\r\n// sync action creators\r\nfunction sessionAuthorize_request(bool) {\r\n  return {\r\n    type: constants.SESSION_AUTHORIZE_REQUEST,\r\n    items: bool\r\n  }\r\n}\r\n\r\nfunction sessionAuthorize_success() {\r\n  return {\r\n    type: constants.SESSION_AUTHORIZE_SUCCESS\r\n  }\r\n}\r\n\r\nfunction sessionAuthorize_fail(error) {\r\n  return {\r\n    type: constants.SESSION_AUTHORIZE_FAIL,\r\n    error: error\r\n  }\r\n}\r\n\r\nfunction sessionLogout_success() {\r\n  return {\r\n    type: constants.SESSION_LOGOUT_SUCCESS\r\n  }\r\n}\r\n\r\n// async action creators\r\nexport function sessionAuthorize(immediate = false) {\r\n  return dispatch => {\r\n    dispatch(sessionAuthorize_request(true)) // отправлен запрос\r\n    api.authorize({ immediate })\r\n      .then(() => {\r\n        dispatch(sessionAuthorize_request(false)) // получен ответ\r\n        return\r\n      })\r\n      .then(() => dispatch(sessionAuthorize_success())) // данные получены\r\n      .catch((error) => dispatch(sessionAuthorize_fail(error))) // данные не получены\r\n  }\r\n}\r\n\r\nexport function sessionLogout() {\r\n  return dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n      api.logout()\r\n        .then(() => {\r\n          dispatch(sessionLogout_success())\r\n          resolve()\r\n        })\r\n        .catch((error) => reject(error))\r\n    })\r\n  }\r\n}","import { connect } from 'react-redux'\r\nimport { sessionAuthorize, sessionLogout } from '../actions/sessionActions'\r\n\r\n// my components\r\nimport LogInButton from '../components/LogInButton'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isLoggedIn: state.sessionReducer\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { sessionAuthorize, sessionLogout })(LogInButton)","import React from 'react'\r\n\r\n// Material-UI components\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ExitIcon from '@material-ui/icons/ExitToApp'\r\n\r\nexport default function LogInButton({ isLoggedIn, sessionAuthorize, sessionLogout }) {\r\n  if (isLoggedIn) {\r\n    return (\r\n      <ListItem button onClick={sessionLogout}>\r\n        <ListItemIcon>\r\n          <ExitIcon />\r\n        </ListItemIcon>\r\n        <ListItemText>\r\n          Log out\r\n        </ListItemText>\r\n      </ListItem>\r\n    )\r\n  } else {\r\n    return (\r\n      <ListItem button onClick={sessionAuthorize}>\r\n        <ListItemIcon>\r\n          <ExitIcon />\r\n        </ListItemIcon>\r\n        <ListItemText>\r\n          Log in\r\n        </ListItemText>\r\n      </ListItem>\r\n    )    \r\n  }\r\n}","import React from 'react'\r\n\r\n// Material-UI components\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\n\r\nexport default function HomeButton() {\r\n  return (\r\n    <ListItem button component=\"a\" href={`/#home`}>\r\n      <ListItemIcon>\r\n        <HomeIcon />\r\n      </ListItemIcon>\r\n      <ListItemText>\r\n        Home\r\n      </ListItemText>\r\n    </ListItem>\r\n  )\r\n}","import constants from '../constants';\r\nimport api from '../api'\r\n\r\n// sync action creators\r\nfunction taskListsLoad_request(bool) {\r\n  return {\r\n    type: constants.TASK_LISTS_LOAD_REQUEST,\r\n    items: bool\r\n  }\r\n}\r\n\r\nfunction taskListsLoad_success(items) {\r\n  return {\r\n    type: constants.TASK_LISTS_LOAD_SUCCESS,\r\n    items: items\r\n  }\r\n}\r\n\r\nfunction taskListsLoad_fail(bool) {\r\n  return {\r\n    type: constants.TASK_LISTS_LOAD_FAIL,\r\n    hasFailed: bool\r\n  }\r\n}\r\n\r\nfunction taskListCreate_success(items) {\r\n  return {\r\n    type: constants.TASK_LIST_CREATE_SUCCESS,\r\n    items: items\r\n  }\r\n}\r\n\r\nfunction taskListCreate_fail(bool) {\r\n  return {\r\n    type: constants.TASK_LIST_CREATE_FAIL,\r\n    hasFailed: bool\r\n  }\r\n}\r\n\r\nfunction taskListTitleUpdate_success(items) {\r\n  return {\r\n    type: constants.TASK_LIST_UPDATE_SUCCESS,\r\n    items: items\r\n  }\r\n}\r\n\r\nfunction taskListTitleUpdate_fail(bool) {\r\n  return {\r\n    type: constants.TASK_LIST_UPDATE_FAIL,\r\n    hasFailed: bool\r\n  }\r\n}\r\n\r\nfunction taskListDelete_success(items) {\r\n  return {\r\n    type: constants.TASK_LIST_DELETE_SUCCESS,\r\n    items: items\r\n  }\r\n}\r\n\r\nfunction taskListDelete_fail(bool) {\r\n  return {\r\n    type: constants.TASK_LIST_DELETE_FAIL,\r\n    hasFailed: bool\r\n  }\r\n}\r\n\r\n// async action creators\r\nexport function taskListsLoad() {\r\n  return dispatch => {\r\n    dispatch(taskListsLoad_request(true))\r\n\r\n    api.taskListsLoad()\r\n      .then(response => {\r\n        dispatch(taskListsLoad_request(false))\r\n        return response.items\r\n      })\r\n      .then(items => dispatch(taskListsLoad_success(items)))\r\n      .catch((error) => dispatch(taskListsLoad_fail(error)))\r\n  };\r\n}\r\n\r\nexport function taskListCreate(title) {\r\n  console.log(title);\r\n  return dispatch => {\r\n    api.taskListCreate({ title })\r\n      .then(items => dispatch(taskListCreate_success(items)))\r\n      .catch((error) => dispatch(taskListCreate_fail(error)))\r\n  }\r\n}\r\n\r\nexport function taskListTitleUpdate(params) {\r\n  return dispatch => {\r\n    api.taskListUpdate({\r\n      taskListId: params.taskListId,\r\n      title: params.title\r\n    })\r\n      .then(items => dispatch(taskListTitleUpdate_success(items)))\r\n      .catch((error) => dispatch(taskListTitleUpdate_fail(error)))\r\n  }\r\n}\r\n\r\nexport function taskListDelete(params) {\r\n  return dispatch => {\r\n    api.taskListDelete({\r\n      taskListId: params.taskListId\r\n    })\r\n      .then(() => dispatch(taskListDelete_success(params)))\r\n      .catch((error) => dispatch(taskListDelete_fail(error)))\r\n  }\r\n}","import React, { useState } from 'react'\r\n\r\n// Material-UI components\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport default function DialogTaskListCreate({ isOpen, onSubmit, onClose }) {\r\n  const [name, setName] = useState('')\r\n\r\n  // обработчик элемента TextField\r\n  function handleTextChange(e) {\r\n    setName(e.target.value)\r\n  }\r\n\r\n  // обработчик элемента Button Cancel\r\n  function handleClose() {\r\n    setName('')\r\n    if (onClose) {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  // обработчик элемента Button Submit\r\n  function handleSubmit() {\r\n    if (onSubmit) {\r\n      onSubmit(name);\r\n    }\r\n    setName('')\r\n  }\r\n\r\n  return (\r\n    <Dialog open={isOpen} onClose={handleClose}>\r\n      <DialogTitle>Add task list</DialogTitle>\r\n      \r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          label=\"Enter new task list title\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={handleTextChange}\r\n        />\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>\r\n          Cancel\r\n          </Button>\r\n        <Button onClick={handleSubmit} color=\"primary\" disabled={!name}>\r\n          Submit\r\n          </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}","import { connect } from 'react-redux'\r\nimport { taskListsLoad, taskListCreate } from '../actions/taskListsActions'\r\n\r\n// my components\r\nimport TaskLists from '../components/TaskLists'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    taskLists: state.taskListsReducer\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { taskListsLoad, taskListCreate })(TaskLists)","import React, { useState, useEffect } from 'react'\r\nimport './TaskLists.css'\r\n\r\n// my components\r\nimport DialogTaskListCreate from './dialogs/DialogTaskListCreate'\r\n\r\n// Material-UI components\r\nimport List from '@material-ui/core/List'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport FolderIcon from '@material-ui/icons/Folder'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nexport default function TaskLists({ taskLists, taskListsLoad, taskListCreate }) {\r\n\r\n  // загрузка TaskLists при загрузке компонента\r\n  useEffect(() => {\r\n    taskListsLoad()\r\n  }, [])\r\n\r\n  // обработчики открытия и закрытия TaskListCreateModal, создания нового TaskList\r\n  const [isCreatingTaskList, setIsCreatingTaskList] = useState(false)\r\n  // открыть TaskListCreateModal\r\n  function handleAddTaskList() {\r\n    setIsCreatingTaskList(true)\r\n  }\r\n  // закрыть TaskListCreateModal\r\n  function handleClose() {\r\n    setIsCreatingTaskList(false)\r\n  }\r\n  // добавить новый TaskList\r\n  function handleTaskListSubmit(newTaskListName) {\r\n    taskListCreate(newTaskListName)\r\n    setIsCreatingTaskList(false)\r\n  }\r\n\r\n  return (\r\n    <List>\r\n      {/* ------------- header --------------- */}\r\n      <ListSubheader>Task Lists</ListSubheader>\r\n\r\n      {/* ------------- Button \"Create new list\" --------------- */}\r\n      <ListItem button onClick={handleAddTaskList}>\r\n        <ListItemIcon>\r\n          <AddIcon />\r\n        </ListItemIcon>\r\n        <ListItemText>\r\n          Create new list\r\n              </ListItemText>\r\n      </ListItem>\r\n\r\n      {/* ------------- Task lists --------------- */}\r\n      {taskLists.length > 0 &&\r\n        taskLists.map(list =>\r\n          <ListItem button component=\"a\" href={`/#list/${list.id}`} key={list.id}>\r\n            <ListItemIcon>\r\n              <FolderIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n              {list.title}\r\n            </ListItemText>\r\n          </ListItem>\r\n        )\r\n      }\r\n\r\n      {/* ------------- Dialog \"Create new task list\" --------------- */}\r\n      <DialogTaskListCreate\r\n        isOpen={isCreatingTaskList}\r\n        onSubmit={handleTaskListSubmit}\r\n        onClose={handleClose}\r\n      />\r\n    </List>\r\n  )\r\n}","import constants from '../constants';\r\nimport api from '../api'\r\n\r\n// sync action creators\r\n// Load\r\nfunction tasksLoad_request(bool) {\r\n  return {\r\n    type: constants.TASKS_LOAD_REQUEST,\r\n    items: bool\r\n  }\r\n}\r\n\r\nfunction tasksLoad_success(items) {\r\n  return {\r\n    type: constants.TASKS_LOAD_SUCCESS,\r\n    items: items\r\n  }\r\n}\r\n\r\nfunction tasksLoad_fail(bool) {\r\n  return {\r\n    type: constants.TASKS_LOAD_FAIL,\r\n    hasFailed: bool\r\n  }\r\n}\r\n\r\n// Create\r\nfunction taskCreate_success(task) {\r\n  return {\r\n    type: constants.TASK_CREATE_SUCCESS,\r\n    task: task\r\n  }\r\n}\r\n\r\nfunction taskCreate_fail(bool) {\r\n  return {\r\n    type: constants.TASK_CREATE_FAIL,\r\n    hasFailed: bool\r\n  }\r\n}\r\n\r\n// Update\r\nfunction taskUpdate_success(task) {\r\n  return {\r\n    type: constants.TASK_UPDATE_SUCCESS,\r\n    task: task\r\n  }\r\n}\r\n\r\nfunction taskUpdate_fail(bool) {\r\n  return {\r\n    type: constants.TASK_UPDATE_FAIL,\r\n    hasFailed: bool\r\n  }\r\n}\r\n\r\n// Delete\r\nfunction taskDelete_success(task) {\r\n  return {\r\n    type: constants.TASK_DELETE_SUCCESS,\r\n    task: task\r\n  }\r\n}\r\n\r\nfunction taskDelete_fail(bool) {\r\n  return {\r\n    type: constants.TASK_DELETE_FAIL,\r\n    hasFailed: bool\r\n  }\r\n}\r\n\r\n// async action creators\r\n// Load\r\nexport function tasksLoad(taskListId) {\r\n  return dispatch => {\r\n    dispatch(tasksLoad_request(true))\r\n\r\n    api.tasksLoad({ taskListId })\r\n      .then(response => {\r\n        dispatch(tasksLoad_request(false))\r\n        return response.items\r\n      })\r\n      .then(items => dispatch(tasksLoad_success(items)))\r\n      .catch((error) => dispatch(tasksLoad_fail(error)))\r\n  }\r\n}\r\n\r\n// Create\r\nexport function taskCreate(params) {\r\n  const newTask = {\r\n    taskListId: params.taskListId,\r\n    title: params.title,\r\n    notes: params.notes\r\n  }\r\n  if (params.due) {\r\n    newTask.due = (new Date(params.due.getTime() - params.due.getTimezoneOffset() * 60000)).toISOString()\r\n  }\r\n\r\n  return dispatch => {\r\n    api.taskCreate(newTask)\r\n      .then(task => dispatch(taskCreate_success(task))) // результат\r\n      .catch((error) => dispatch(taskCreate_fail(error))) // ошибка\r\n  }\r\n}\r\n\r\n// Update\r\nexport function taskUpdate(params) {\r\n  return dispatch => {\r\n    api.taskUpdate({\r\n      taskListId: params.taskListId,\r\n      taskId: params.taskId,\r\n      title: params.title,\r\n      notes: params.notes,\r\n      due: params.due\r\n    })\r\n      .then(task => dispatch(taskUpdate_success(task))) // успешно\r\n      .catch((error) => dispatch(taskUpdate_fail(error))) // ошибка\r\n  }\r\n}\r\n\r\n// Update Status\r\nexport function taskUpdateStatus(params) {\r\n  return dispatch => {\r\n    api.taskUpdate({\r\n      taskListId: params.taskListId,\r\n      taskId: params.taskId,\r\n      status: params.isCompleted ? 'completed' : 'needsAction'\r\n    })\r\n      .then(task => dispatch(taskUpdate_success(task))) // тут 'task' - возвращаемое от api значение\r\n      .catch((error) => dispatch(taskUpdate_fail(error))) // ошибка\r\n  }\r\n}\r\n\r\n// Delete\r\nexport function taskDelete(params) {\r\n  return dispatch => {\r\n    api.taskDelete({\r\n      taskListId: params.taskListId,\r\n      taskId: params.taskId\r\n    })\r\n      .then(() => dispatch(taskDelete_success(params))) // успешно\r\n      .catch((error) => dispatch(taskDelete_fail(error))) // ошибка\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\n// Material-UI components\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\n\r\nexport default function DialogTaskEdit({ isOpen, onSubmit, onClose, task, taskListId }) {\r\n  const { title, notes, due, id } = task\r\n\r\n  const [newTitle, setNewTitle] = useState()\r\n  const [newNotes, setNewNotes] = useState()\r\n  const [newDue, setNewDue] = useState()\r\n\r\n  useEffect(\r\n    () => {\r\n      resetState()\r\n    }, [title, notes, due]\r\n  )\r\n\r\n  // обработчики элементов input\r\n  function handleTitleChange(e) {\r\n    setNewTitle(e.target.value)\r\n  }\r\n  function handleNotesChange(e) {\r\n    setNewNotes(e.target.value);\r\n  }\r\n  function handleDueChange(date) {\r\n    setNewDue(date)\r\n  }\r\n\r\n  // обработчик элемента Button Cancel\r\n  function handleClose() {\r\n    resetState()\r\n    if (onClose) {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  // обработчик элемента Button Submit\r\n  function handleSubmit() {\r\n    if (onSubmit) {\r\n      onSubmit({\r\n        taskListId: taskListId,\r\n        taskId: id,\r\n        title: newTitle,\r\n        notes: newNotes,\r\n        due: newDue || undefined\r\n      })\r\n    }\r\n  }\r\n\r\n  function resetState() {\r\n    setNewTitle(title)\r\n    setNewNotes(notes || '')\r\n    setNewDue(due || '')\r\n  }\r\n\r\n  return (\r\n    <Dialog open={isOpen} onClose={handleClose}>\r\n      <DialogTitle>Edit task</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          value={newTitle}\r\n          label=\"Enter task title\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={handleTitleChange}\r\n        />\r\n      </DialogContent>\r\n\r\n      <DialogContent>\r\n        <TextField\r\n          value={newNotes}\r\n          label=\"Enter task description\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={handleNotesChange}\r\n        />\r\n      </DialogContent>\r\n\r\n      <DialogContent>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            format=\"dd/MM/yyyy\"\r\n            label=\"Enter task due\"\r\n            value={newDue || null} // это для возможности установки пустого значения\r\n            InputLabelProps={{ shrink: true }}\r\n            onChange={handleDueChange}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>\r\n          Cancel\r\n          </Button>\r\n        <Button onClick={handleSubmit} color=\"primary\" disabled={!newTitle}>\r\n          Submit\r\n          </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}","import { connect } from 'react-redux'\r\nimport { taskUpdateStatus, taskUpdate, taskDelete } from '../actions/tasksActions'\r\n\r\n// my components\r\nimport Task from '../components/Task'\r\n\r\nexport default connect(null, { taskUpdateStatus, taskUpdate, taskDelete })(Task)","import React, { useState } from 'react'\r\nimport './Task.css'\r\n\r\n// my components\r\nimport DialogTaskEdit from './dialogs/DialogTaskEdit'\r\n\r\n// Material-UI components\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nexport default function Task({ task, taskListId, taskUpdateStatus, taskUpdate, taskDelete }) {\r\n\r\n  const { title, notes, due, id, isCompleted } = task\r\n\r\n  // обработчик Checkbox\r\n  function handleCheckbox() {\r\n    taskUpdateStatus({\r\n      taskListId: taskListId,\r\n      taskId: id,\r\n      isCompleted: !isCompleted\r\n    })\r\n  }\r\n\r\n  // обработчик Delete\r\n  function handleDelete() {\r\n    const isConfirmed = window.confirm(\r\n      'Are you sure to delete this Task?'\r\n    )\r\n    if (isConfirmed) {\r\n      taskDelete({\r\n        taskListId: taskListId,\r\n        taskId: id\r\n      })\r\n    }\r\n  }\r\n\r\n  // обработчики Dialog \"Edit task\"\r\n  const [isDialogEditTask, setIsDialogEditTask] = useState(false)\r\n  // открыть Dialog \"Edit task\"\r\n  function openDialogTaskEdit() {\r\n    setIsDialogEditTask(true)\r\n  }\r\n  // закрыть Dialog \"Edit task\"\r\n  function closeDialogTaskEdit() {\r\n    setIsDialogEditTask(false)\r\n  }\r\n  // submit Dialog \"Edit task\"\r\n  function submitDialogTaskEdit(params) {\r\n    taskUpdate({ taskListId, ...params })\r\n    setIsDialogEditTask(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ListItem className='Task'>\r\n\r\n        {/* ------------- Checkbox \"Completed task\" --------------- */}\r\n        <ListItemIcon>\r\n          <Checkbox\r\n            className='Task__checkbox'\r\n            checked={isCompleted}\r\n            onChange={handleCheckbox}\r\n          />\r\n        </ListItemIcon>\r\n\r\n        {/* ------------- Text \"Task\" --------------- */}\r\n        <ListItemText onClick={openDialogTaskEdit} primary={title} secondary={notes} />\r\n        \r\n        <ListItemIcon onClick={openDialogTaskEdit}>\r\n          <span>{due ? due.toDateString() : null}</span>        \r\n        </ListItemIcon>\r\n        \r\n        {/* ------------- Button \"Delete task\" --------------- */}\r\n        <IconButton onClick={handleDelete}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </ListItem>\r\n\r\n      {/* ------------- Dialog \"Edit task\" --------------- */}\r\n      <DialogTaskEdit\r\n        isOpen={isDialogEditTask}        \r\n        onSubmit={submitDialogTaskEdit}\r\n        onClose={closeDialogTaskEdit}        \r\n        task={task}\r\n        taskListId={taskListId}\r\n      />\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\n\r\n// Material-UI components\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\n\r\nexport default function DialogTaskCreate({ isOpen, onSubmit, onClose }) {\r\n\r\n  const [newTitle, setNewTitle] = useState()\r\n  const [newNotes, setNewNotes] = useState()\r\n  const [newDue, setNewDue] = useState()\r\n\r\n  // обработчик элементов input\r\n  function handleTitleChange(e) {\r\n    setNewTitle(e.target.value)\r\n  }\r\n  function handleNotesChange(e) {\r\n    setNewNotes(e.target.value)\r\n  }\r\n  function handleDueChange(date) {\r\n    setNewDue(date)\r\n  }\r\n\r\n  // обработчик элемента Button Cancel\r\n  function handleClose() {\r\n    resetState()\r\n    if (onClose) {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  // обработчик элемента Button Submit\r\n  function handleSubmit() {\r\n    if (onSubmit) {\r\n      onSubmit({\r\n        title: newTitle, \r\n        notes: newNotes, \r\n        due: newDue\r\n      })\r\n    }\r\n    resetState()\r\n  }\r\n\r\n  function resetState() {\r\n    setNewTitle('')\r\n    setNewNotes('')\r\n    setNewDue('')\r\n  }\r\n\r\n  return (\r\n    <Dialog open={isOpen} onClose={handleClose}>\r\n      <DialogTitle>Add task</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          label=\"Enter task title\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={handleTitleChange}\r\n        />\r\n      </DialogContent>\r\n\r\n      <DialogContent>\r\n        <TextField\r\n          label=\"Enter task description\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={handleNotesChange}\r\n        />\r\n      </DialogContent>\r\n\r\n      {/* <DialogContent>\r\n        <TextField\r\n          type=\"date\"\r\n          label=\"Enter task due\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={handleDueChange}\r\n        />\r\n      </DialogContent> */}\r\n      \r\n      <DialogContent>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            format=\"dd/MM/yyyy\"\r\n            label=\"Enter task due\"\r\n            value={newDue || null} // это для возможности установки пустого значения\r\n            InputLabelProps={{ shrink: true }}\r\n            onChange={handleDueChange}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>\r\n          Cancel\r\n          </Button>\r\n        <Button onClick={handleSubmit} color=\"primary\" disabled={!newTitle}>\r\n          Submit\r\n          </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\n// Material-UI components\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport default function DialogTaskListEditTitle({ isOpen, onSubmit, onClose, initialValue }) {\r\n\r\n  const [value, setValue] = useState('')\r\n\r\n  useEffect(\r\n    () => {\r\n      resetState()\r\n    }, [initialValue]\r\n  )\r\n\r\n  // обработчик элемента TextField\r\n  function handleTextChange(e) {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  // обработчик элемента Button Cancel\r\n  function handleClose() {\r\n    resetState()\r\n    if (onClose) {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  // обработчик элемента Button Submit\r\n  function handleSubmit() {\r\n    if (onSubmit) {\r\n      onSubmit({\r\n        title: value\r\n      })\r\n    }\r\n  }\r\n\r\n  function resetState() {\r\n    setValue(initialValue)\r\n  }\r\n\r\n  return (\r\n    <Dialog open={isOpen} onClose={handleClose}>\r\n      <DialogTitle>Edit task list</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          value={value}\r\n          label=\"Enter task list new title\"\r\n          InputLabelProps={{ shrink: true }}\r\n          onChange={handleTextChange}\r\n        />\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleSubmit} color=\"primary\" disabled={!value}>\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}","import { connect } from 'react-redux'\r\nimport { taskListTitleUpdate, taskListDelete } from '../actions/taskListsActions'\r\nimport { tasksLoad, taskCreate } from '../actions/tasksActions'\r\nimport { selectTaskListTitle } from '../selectors'\r\n\r\n// my components\r\nimport Tasks from '../components/Tasks'\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  let tasksLists = state.taskListsReducer  \r\n  let tasks = state.tasksReducer\r\n  let taskListId = ownProps.match.params.topicId\r\n  let taskListTitle = selectTaskListTitle(tasksLists, taskListId)\r\n\r\n  return {\r\n    tasksLists,\r\n    tasks,\r\n    taskListId,\r\n    taskListTitle\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { taskListTitleUpdate, taskListDelete, tasksLoad, taskCreate })(Tasks)","export function selectTaskListTitle(tasksLists, taskListId) {\r\n  let taskListObject = tasksLists.find((elem) => elem.id === taskListId)\r\n  let taskListTitle = taskListObject ? taskListObject.title : null\r\n  return taskListTitle\r\n}","import React, { useState, useEffect } from 'react'\r\nimport './Tasks.css'\r\n\r\n// my components\r\nimport Task from '../containers/Task'\r\nimport DialogTaskCreate from './dialogs/DialogTaskCreate'\r\nimport DialogTaskListEditTitle from './dialogs/DialogTaskListEditTitle'\r\n\r\n// Material-UI components\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport List from '@material-ui/core/List'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nexport default function Tasks({ taskListId, taskListTitle, tasks, taskListTitleUpdate, taskListDelete, tasksLoad, taskCreate, history }) {\r\n\r\n  // загрузка Tasks при загрузке компонента\r\n  useEffect(() => {\r\n    tasksLoad(taskListId)\r\n  }, [taskListId])\r\n\r\n  // обработчики создания Task\r\n  const [isCreatingTask, setIsCreatingTask] = useState(false)\r\n  // открыть TaskCreateModal\r\n  function handleAddTask() {\r\n    setIsCreatingTask(true)\r\n  }\r\n  // закрыть TaskCreateModal\r\n  function handleTaskClose() {\r\n    setIsCreatingTask(false)\r\n  }\r\n  // добавить новый Task\r\n  function handleTaskSubmit(params) {\r\n    //const taskListId = match.params.topicId\r\n    taskCreate({ taskListId, ...params })\r\n    setIsCreatingTask(false)\r\n  }\r\n\r\n  // обработчик удаления Task\r\n  function handleDeleteTaskList() {\r\n    const isConfirmed = window.confirm(\r\n      'All tasks in this Task List will be deleted too. Are you sure to delete this Task List?'\r\n    )\r\n    if (isConfirmed) {\r\n      history.replace(\"/home\")\r\n      taskListDelete({\r\n        taskListId\r\n      })\r\n    }\r\n  }\r\n\r\n  // обработчики редактирования Task List Title\r\n  const [isEditingTaskList, setIsEditingTaskList] = useState(false)\r\n  function editTaskListTitle() {\r\n    setIsEditingTaskList(true)\r\n  }\r\n  function handleTaskListSubmit(params) {\r\n    console.log({ taskListId, ...params });\r\n    taskListTitleUpdate({ taskListId, ...params })\r\n    setIsEditingTaskList(false)\r\n  }\r\n  function handleTaskListClose() {\r\n    setIsEditingTaskList(false)\r\n  }\r\n\r\n  return (\r\n    <div className='Tasks'>\r\n      <div className='Tasks__header'>\r\n\r\n        {/* ------------- Task list title --------------- */}\r\n        <h2 className='Tasks__title' onClick={editTaskListTitle}>\r\n          {taskListTitle}\r\n        </h2>\r\n\r\n        {/* ------------- Button \"Delete task list\" --------------- */}\r\n        <div>\r\n          <IconButton onClick={handleDeleteTaskList}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <List className='Tasks__tasks'>\r\n\r\n        {/* ------------- Button \"Create new task\" --------------- */}\r\n        <ListItem className=\"Tasks__createTask\" button onClick={handleAddTask}>\r\n          <ListItemIcon className=\"Tasks__createTaskIcon\"><AddIcon /></ListItemIcon>\r\n          <ListItemText>Create new task</ListItemText>\r\n        </ListItem>\r\n\r\n        {/* ------------- Tasks --------------- */}\r\n        {tasks.length > 0 &&\r\n          tasks.map(task =>\r\n            <Task\r\n              key={task.id}\r\n              taskListId={taskListId}\r\n              task={task}\r\n            />\r\n          )\r\n        }\r\n      </List>\r\n\r\n      {/* ------------- Dialog \"Edit task list title\" --------------- */}\r\n      <DialogTaskListEditTitle\r\n        isOpen={isEditingTaskList}\r\n        onSubmit={handleTaskListSubmit}\r\n        onClose={handleTaskListClose}\r\n        initialValue={taskListTitle}\r\n      />\r\n\r\n      {/* ------------- Dialog \"Create new task\" --------------- */}\r\n      <DialogTaskCreate\r\n        isOpen={isCreatingTask}\r\n        onSubmit={handleTaskSubmit}\r\n        onClose={handleTaskClose}\r\n      />\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport './Home.css'\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"Home\">\r\n      <h2>React Redux + Google API</h2>\r\n      <h3>\r\n        Based on these examples:\r\n      </h3>\r\n      <ul>\r\n        <li>\r\n          <a href=\"https://github.com/krambertech/react-essential-course/tree/master/06-real-world\" rel=\"noopener noreferrer\" target=\"_blank\">krambertech/react-essential-course</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"https://github.com/KarafiziArtur/react-google-tasks\" rel=\"noopener noreferrer\" target=\"_blank\">KarafiziArtur/react-google-tasks</a>\r\n        </li>\r\n      </ul>      \r\n      <p>\r\n        To get started, add your CLIENT_ID to the file 'src/api/index.js'. <br />\r\n        You can create your CLIENT_ID using the instructions on this <a href=\"https://developers.google.com/tasks/quickstart/js\">page</a>.\r\n      </p>\r\n\r\n      <h3>\r\n        The application uses the following tools:\r\n      </h3>\r\n      <ul>\r\n        <li>\r\n          React, React Hooks, React-Router, Create React App\r\n        </li>\r\n        <li>\r\n          Redux, React-Redux, Redux-Thunk\r\n        </li>\r\n        <li>\r\n          Material-UI\r\n        </li>\r\n        <li>\r\n          Google Tasks API\r\n        </li>\r\n      </ul>\r\n      \r\n      <h3>\r\n        Application structure:\r\n      </h3>\r\n      <pre>{`\r\n      <MyComponent> - Presentational Component\r\n      (MyComponent) - connected to Redux by Container Component\r\n\r\n        (App)\r\n        │\r\n        ├── (LogInButton)\r\n        │\r\n        ├── <HomeButton>\r\n        │\r\n        ├── (TaskLists)\r\n        │   │\r\n        │   └── <DialogTaskListCreate>\r\n        │\r\n        └── (Tasks)\r\n            │\r\n            ├── <DialogTaskCreate>\r\n            │\r\n            ├── <DialogTaskListEditTitle>\r\n            │\r\n            └── map (Task)\r\n                │\r\n                └── <DialogTaskEdit>\r\n      `}</pre>\r\n      \r\n      <h3>\r\n        Application actions:\r\n      </h3>\r\n\r\n      <p>LogInButton component:</p>\r\n      <ul>\r\n        <li>sessionAuthorize</li>\r\n        <li>sessionLogout</li>\r\n      </ul>\r\n\r\n      <p>TaskLists component:</p>\r\n      <ul>\r\n        <li>taskListsLoad</li>\r\n        <li>taskListCreate</li>\r\n      </ul>\r\n\r\n      <p>Tasks component:</p>\r\n      <ul>\r\n        <li>taskListTitleUpdate</li>\r\n        <li>taskListDelete</li>\r\n        <li>tasksLoad</li>\r\n        <li>taskCreate</li>\r\n      </ul>\r\n\r\n      <p>Task component:</p>\r\n      <ul>\r\n        <li>taskUpdateStatus</li>\r\n        <li>taskUpdate</li>\r\n        <li>taskDelete</li>\r\n      </ul>\r\n\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { HashRouter, Route, Redirect } from \"react-router-dom\"\r\nimport './App.css'\r\n\r\n// my components\r\nimport LogInButton from '../containers/LogInButton'\r\nimport HomeButton from './HomeButton'\r\nimport TaskLists from '../containers/TaskLists'\r\nimport Tasks from '../containers/Tasks'\r\nimport Home from './Home'\r\n\r\n// Material-UI components\r\nimport List from '@material-ui/core/List'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nfunction TasksRoute({ match }) {\r\n  return (\r\n    <Route path={`${match.path}/:topicId`} component={Tasks} />\r\n  )\r\n}\r\n\r\nexport default function App({ isLoggedIn }) {\r\n  return (\r\n    <HashRouter hashType='noslash'>\r\n      <div className='App'>\r\n\r\n        <div className='App__menu'>\r\n          <h3 className='App__title'>Almost Google Tasks</h3>\r\n          <Divider />\r\n\r\n          <List>\r\n            <LogInButton />\r\n            <HomeButton />\r\n          </List>\r\n          <Divider />\r\n\r\n          {isLoggedIn ? <Route component={TaskLists} /> : <Redirect to='/home' />}\r\n        </div>\r\n\r\n        <div className='App__tasks'>\r\n          <Route path=\"/home\" component={Home} />\r\n          {isLoggedIn ? <Route path=\"/list\" component={TasksRoute} /> : null}\r\n        </div>\r\n\r\n      </div>\r\n    </HashRouter>\r\n  )\r\n}","import { connect } from 'react-redux'\r\n\r\n// my components\r\nimport App from '../components/App'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isLoggedIn: state.sessionReducer\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)","import constants from '../constants';\r\n\r\nexport default function taskListsReducer(state = [], action) {\r\n\tlet newState\r\n\r\n\tswitch (action.type) {\r\n\t\tcase constants.TASK_LISTS_LOAD_SUCCESS:\r\n      newState = action.items ? action.items.map(formatTaskList) : [] // если нет ни одного списка - возвращает пустой массив\r\n      return newState\r\n\r\n    case constants.TASK_LIST_CREATE_SUCCESS:\r\n      newState = [...state]\r\n      let newTaskList = formatTaskList(action.items)\r\n      newState.push(newTaskList)\r\n      return newState\r\n\r\n    case constants.TASK_LIST_UPDATE_SUCCESS:\r\n      newState = [...state]\r\n      let updatedTaskListIndex = newState.findIndex(taskList => taskList.id === action.items.id)\r\n\t\t\tnewState[updatedTaskListIndex] = formatTaskList(action.items)\r\n      return newState\r\n\r\n    case constants.TASK_LIST_DELETE_SUCCESS:\r\n      newState = [...state]\r\n      let deletedTaskListIndex = newState.findIndex(taskList => taskList.id === action.items.taskListId)\r\n      newState.splice(deletedTaskListIndex, 1)\r\n      console.log(newState);\r\n      return newState\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nfunction formatTaskList(taskList) {\r\n  return {\r\n    id: taskList.id,\r\n    title: taskList.title\r\n  }\r\n}","import constants from '../constants';\r\n\r\nexport default function tasksReducer(state = [], action) {\r\n  let newState\r\n\r\n  switch (action.type) {\r\n    case constants.TASKS_LOAD_REQUEST:\r\n      newState = []\r\n      return newState\r\n\r\n    case constants.TASKS_LOAD_SUCCESS:\r\n      newState = action.items ? action.items.map(formatTask) : [] // если нет ни одной задачи - возвращает пустой массив\r\n      return newState\r\n\r\n    case constants.TASK_CREATE_SUCCESS:\r\n      newState = [...state]\r\n      let newTask = formatTask(action.task)      \r\n      newState.unshift(newTask)\r\n      return newState\r\n\r\n    case constants.TASK_UPDATE_SUCCESS:\r\n      newState = [...state]\r\n      let updatedTaskIndex = newState.findIndex(task => task.id === action.task.id)      \r\n      newState[updatedTaskIndex] = formatTask(action.task)\r\n      return newState\r\n\r\n    case constants.TASK_DELETE_SUCCESS:\r\n      newState = [...state]\r\n      let deletedTaskIndex = newState.findIndex(task => task.id === action.task.taskId)\r\n      newState.splice(deletedTaskIndex, 1)\r\n      return newState\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction formatTask(task) {\r\n  return {\r\n    id: task.id,\r\n    title: task.title,\r\n    notes: task.notes,\r\n    due: task.due ? new Date(task.due) : undefined,\r\n    isCompleted: task.status === 'completed', // returns 'true' if 'status === 'completed', else - returns 'false'\r\n    position: task.position\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport sessionReducer from './sessionReducer'\r\nimport taskListsReducer from './taskListsReducer'\r\nimport tasksReducer from './tasksReducer'\r\n\r\nconst appReducer = combineReducers({\r\n\tsessionReducer,\r\n    taskListsReducer,\r\n    tasksReducer\r\n})\r\n\r\nexport default appReducer","import constants from '../constants';\r\n\r\nexport default function sessionReducer(state = false, action) {\r\n\tlet newState\r\n\r\n\tswitch (action.type) {\r\n\t\tcase constants.SESSION_AUTHORIZE_SUCCESS:\r\n\t\t\tnewState = true\r\n\t\t\treturn newState\r\n\r\n\t\tcase constants.SESSION_LOGOUT_SUCCESS:\r\n\t\t\tnewState = false\r\n\t\t\treturn newState\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport reducer from '../reducers'\r\nimport thunk from \"redux-thunk\"\r\nimport { createLogger } from 'redux-logger'\r\n\r\nconst middleware = [ thunk ]\r\nif (process.env.NODE_ENV !== 'production') {\r\n  middleware.push(createLogger())\r\n}\r\n\r\nconst store = createStore(reducer, applyMiddleware(...middleware))\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\n\nimport App from './containers/App'\nimport store from './store'\n\nwindow.store = store\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}